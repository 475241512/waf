#! /usr/bin/env python
# encoding: utf-8

VERSION='1.0.0'
APPNAME='app'

top = '.'
out = 'build'

from waflib.extras import remote # optional
from waflib.extras import distnet

variants = [
'linux_64_debug',
'linux_64_release',
'linux_32_debug',
'linux_32_release',
]

def options(opt):
	opt.load('distnet')
	opt.load('compiler_c')

def configure(conf):
	conf.load('distnet')
	conf.load('compiler_c')

def build(bld):
	bld.shlib(source='main.c', target='pouet', includes='.')

def package(ctx):
	for v in variants:
		tar = 'build/%s.tarfile' % v
		inputs = ['build/%s/libpouet.so' % v]
		ctx.make_tarfile(tar, inputs)
	ctx.make_tarfile('build/noarch.tarfile', ['head.h', 'waf_pouet.py'])

def test_download(ctx):
	import urllib
	data = urllib.urlencode([('pkgname', APPNAME), ('pkgver', VERSION), ('pkgfile', 'noarch.tarfile')])
	def hook(a, b, c):
		pass
	urllib.urlretrieve('http://localhost:8000/cgi-bin/download.py', 'x', hook, data)

